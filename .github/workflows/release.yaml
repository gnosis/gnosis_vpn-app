name: Close release
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Next version type"
        required: true
        type: choice
        default: "patch"
        options:
          - patch
          - minor
          - major
concurrency:
  group: release
  cancel-in-progress: false
jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-15' # for Arm based macs (M1 and above).
            args: '--target aarch64-apple-darwin'
#           - platform: 'macos-15-intel' # for Intel based macs.
#             args: '--target x86_64-apple-darwin'

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

#       - name: install dependencies (ubuntu only)
#         if: matrix.platform == 'ubuntu-24.04' # This must match the platform value defined above.
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: 'aarch64-apple-darwin'

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: install frontend dependencies
        # If you don't have `beforeBuildCommand` configured you may want to build your frontend here too.
        run: deno install # change this to npm or pnpm depending on which one you use.

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: 'Gnosis VPN UI v__VERSION__'
          releaseBody: 'See the assets to download this version and install.'
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
