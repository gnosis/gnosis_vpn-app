#!/bin/bash
#
# Gnosis VPN Post-Flight Script
#
# This script runs after the package payload is installed and the postinstall script completes.
# It handles tasks that require files to be fully extracted:
# - UI application installation to /Applications
#
# Arguments:
#   $1: Full path to the installation package
#   $2: Full path to the installation destination (target volume)
#   $3: Mountpoint of the destination volume
#   $4: Root directory "/" for the current system

set -euo pipefail

# Source unified logging library
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "${SCRIPT_DIR}/logging.sh"

# Setup logging
setup_logging "postflight"

# Parameter validation and defaults
PACKAGE_PATH="${1:-}"
TARGET_VOLUME="${2:-/}"
MOUNTPOINT="${3:-/}"
ROOT_DIR="${4:-/}"

log_info "Package path: $PACKAGE_PATH"
log_info "Target volume: $TARGET_VOLUME"

# Install UI application from temporary location to Applications
install_ui_app() {
    local source_app="${TARGET_VOLUME}/usr/local/share/gnosisvpn/gnosis_vpn-app.app"
    local target_app="${TARGET_VOLUME}/Applications/gnosis_vpn-app.app"
    
    log_info "Installing UI application..."
    
    if [[ -d "$source_app" ]]; then
        log_info "Found UI app bundle: $source_app"
        
        # Remove existing app if present
        if [[ -d "$target_app" ]]; then
            log_info "Removing existing UI app..."
            rm -rf "$target_app"
        fi
        
        # Copy app to Applications
        if cp -R "$source_app" "$target_app"; then
            log_success "UI app installed to Applications"
            
            # Set proper permissions
            chmod -R 755 "$target_app"
            chown -R root:admin "$target_app" 2>/dev/null || true
            
            # Clean up temporary location
            rm -rf "$source_app"
            log_info "Cleaned up temporary UI app files"
        else
            log_error "Failed to install UI app to Applications"
            return 1
        fi
    else
        log_info "No UI app found to install (this is normal if UI app was not included)"
        log_info "Checked location: $source_app"
        # List what's actually there for debugging
        if [[ -d "${TARGET_VOLUME}/usr/local/share/gnosisvpn/" ]]; then
            log_info "Contents of /usr/local/share/gnosisvpn/:"
            ls -la "${TARGET_VOLUME}/usr/local/share/gnosisvpn/" || true
        fi
    fi
}

# Main execution
main() {
    log_info "Starting post-flight operations..."
    
    # Install UI application
    install_ui_app
    
    log_success "Post-flight operations completed successfully!"
}

# Run main function with error handling
if ! main "$@"; then
    log_error "Post-flight script failed"
    exit 1
fi