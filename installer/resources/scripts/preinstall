#!/bin/bash
#
# Gnosis VPN Pre-Installation Script (Minimal)
#
# This script performs minimal non-blocking environment checks.
# All binaries are now embedded in the PKG payload.
#
# Arguments:
#   $1: Full path to the installation package
#   $2: Full path to the installation destination (target volume)
#   $3: Mountpoint of the destination volume
#   $4: Root directory "/" for the current system

set -euo pipefail

# Source unified logging library
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
source "${SCRIPT_DIR}/logging.sh"

# Setup logging
setup_logging "preinstall"

log_info "Install package: $1"
log_info "Target volume: $2"

# Check for existing installation
CONFIG_DIR="${2}/etc/gnosisvpn"
VERSION_FILE="${CONFIG_DIR}/version.txt"
BIN_DIR="${2}/usr/local/bin"

if [[ -f "$VERSION_FILE" ]]; then
    local previous_version
    previous_version=$(cat "$VERSION_FILE" 2>/dev/null || echo "unknown")
    log_info "Previous installation detected (version: $previous_version)"
elif [[ -f "$BIN_DIR/gnosis_vpn" ]] || [[ -f "$BIN_DIR/gnosis_vpn-ctl" ]]; then
    log_info "Previous installation detected (legacy, no version file)"
else
    log_info "No previous installation found - fresh installation"
fi

# Check if VPN service is running (to warn user)
if pgrep -f "gnosis_vpn" >/dev/null 2>&1; then
    log_warn "Gnosis VPN service appears to be running"
    log_info "The service will be updated but may need to be restarted after installation"
fi

# Optional: warn if WireGuard tools missing (do not exit non-zero)
if ! command -v wg &>/dev/null || ! command -v wg-quick &>/dev/null; then
    log_warn "wireguard-tools not found"
    log_info "WireGuard is required for VPN functionality"
    log_info "Install with: brew install wireguard-tools"
    log_info "Or visit: https://www.wireguard.com/install/"
fi

log_success "Pre-installation checks completed"
log_info "Log file: $INSTALLER_LOG_FILE"
log_script_end "success"

exit 0
